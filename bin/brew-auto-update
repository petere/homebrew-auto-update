#!/bin/bash

set -eu
set -o pipefail

PATH=/usr/local/bin:$PATH

# Check OS X system settings.  Note that the Homebrew terminology is
# different from OS X:
#
# Homebrew: update -> fetch -> upgrade
# OS X: check -> download -> update
#
auto_update=${HOMEBREW_AUTO_UPDATE:-$(defaults read /Library/Preferences/com.apple.SoftwareUpdate AutomaticCheckEnabled)}
auto_fetch=${HOMEBREW_AUTO_FETCH:-$(defaults read /Library/Preferences/com.apple.SoftwareUpdate AutomaticDownload)}
auto_upgrade=${HOMEBREW_AUTO_UPGRADE:-$(defaults read /Library/Preferences/com.apple.commerce AutoUpdate)}

if [ "$auto_update" != 1 ]; then
	exit
fi

if [ "$(scutil -r github.com)" != 'Reachable' ]; then
	exit
fi

for termapp in iTerm Terminal; do
	if termapp_id=$(osascript -e "id of app \"$termapp\"" 2>/dev/null) && [ -n "$termapp_id" ]; then
		break
	fi
done

if ! out=$(brew update 2>&1); then
	terminal-notifier \
		-group 'org.eisentraut.BrewAutoUpdate' \
		-sound 'Glass' \
		-title 'Homebrew' \
		-subtitle 'update failed' \
		-message "$out" \
		-activate "$termapp_id" \
		>/dev/null
	exit 1
fi

if printf "%s" "$out" | grep 'Already up-to-date.'; then
	updated=false
else
	updated=true
fi

outdated=$(brew outdated | tr '\n' ' ' | sed 's/ $//')
if [ -n "$outdated" ]; then

	if [ "$auto_fetch" = 1 ]; then
		brew fetch $outdated || :
	fi

	terminal-notifier \
		-group 'org.eisentraut.BrewAutoUpdate' \
		-sound 'Bottle' \
		-title 'Homebrew' \
		-subtitle 'Package updates available' \
		-message "$outdated" \
		-activate "$termapp_id" \
		>/dev/null

else
	terminal-notifier -remove 'org.eisentraut.BrewAutoUpdate' >/dev/null
fi
